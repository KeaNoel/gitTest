--------------Linux下通过git将文件push github上--------------------
由于做了root免密码登陆处理，登入之前则不需要输入用户名和密码,不过要切换成root权限进行push

首先在github创建Git仓库

在本地建立文件夹生成.git文件

mkdir filename --创建文件夹
cd filename --切换目录
pwd  --查看目录

git init  --本地初始化空的文件夹有.git文件生成

ls -ah --查看.git文件是否存在

git add 文件 --添加文件

git commit -m "备注"

git remote add origin +github生成的SSH或者Https地址  --在本地下的 filename仓库下运行命令,将本地仓库和远程仓库进行关联；

su - root --切换成root获取权限

cd filename --切换目录

pwd --再次查看目录

ls -ah --可选择查看.git文件是否在

git push origin master --将文件上传


总结：

----------------------Windows篇------------------------
git init 

git add 

git commit -m ""

git add origin + 地址

git push orgin master

-------------------------------------------版本回退---------------------------

git log --现实最近到最远的提交日志，每一次提交都有对应的commit id和commit message

git log --pretty=oneline       --(可加参数避免信息杂乱无章)

git reset --heard id           --（根据id回退到指定的版本）

git push origin HEAD --force   --（推送到服务器）

git reflog  		      --（查看命令操作的历史）

git diff                       --（比较版本之间的差异）



-------------------------------------------分支管理---------------------------
查看分支
git branch

创建分支
git branch <name>

切换分支
git checkout <name> 或者 git switch name

创建+切换分支：git checkout -b <name> 或者 git switch -c <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

强制删除分支：git branch -D <name>

查看分支合并图：git log --graph

查看远程信息：git remote -v

从本地推送分支：git push origin branch-name,如果推送失败，用git pull抓远程（从远程仓库获取最新版本并合并到本地）

-------------------------------------------标签管理---------------------------
git tag <tagname> 用于新建一个标签，默认尾HEAD,也可以指定一个commit id;

命令 git tag -a<tagname> -m "sdfdsfsdf..."可以指定标签信息

git tag 可以查看所有标签
 
git push origin <tagname>可以推送一个本地标签

git push origin --tages 可以推送全部未推送的本地标签

git tag -d <tagname> 可以删除一个本地标签

git push origin :refs/tags/<tagname> 可以删除一个远程标签
